<!-- This is a launch file that runs the bare minimum requirements to get -->
<!-- gazebo running for a fixed-wing aircraft -->

<launch>
  <arg name="mav_name"            default="fixedwing"/>
  <arg name="show_gui"            default="false"/>
  <arg name="sim_paused"          default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg sim_paused)"/>
    <arg name="gui" value="$(arg show_gui)"/>
    <arg name="verbose" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Spawn MAV -->
  <include file="$(find rosplane_sim)/launch/spawn_mav.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find rosplane_sim)/xacro/$(arg mav_name).xacro" />
  </include>

  <group ns="$(arg mav_name)">
    <!-- Load Global Parameters for this MAV -->
    <rosparam command="load" file="$(find rosplane_sim)/params/$(arg mav_name).yaml"/> <!-- Aerodynamic parameters -->
    <rosparam command="load" file="$(find rosplane)/param/fixedwing.yaml" ns="autopilot"/> <!-- simulation gains -->
    <node name="autopilot" pkg="rosplane" type="rosplane_controller" output="screen">
      <remap from="state" to="truth"/>
      <param name="groundD" value="0.0"/>
    </node>
<!--  -->
    <node name="estimator" pkg="rosplane" type="rosplane_estimator" output="screen"/>
    <!-- Must publish a status: armed to estimate states -->
    <node name="status_publisher" pkg="rostopic" type="rostopic" output="screen"
      args="pub status rosflight_msgs/Status '{header: {seq: 0, stamp: 0, frame_id: 'none'},
      armed: 'true', failsafe: 'false', rc_override: 'false', offboard: 'false',
      control_mode: 0, error_code: 0, num_errors: 0, loop_time_us: 0}'"/>

    <node name="pathfollower" pkg="rosplane" type="rosplane_path_follower" output="screen">
       <remap from="state" to="truth"/>
    </node>

    <!-- <node name="current_path_publisher" pkg="rostopic" type="rostopic"
      args="pub current_path rosplane_msgs/Current_Path '0' '15.0'  '[0.0, 0.0, -100.0]'  '[1.0, 0.0, 0.0]'  '[0.0, 0.0, -100.0]'  '100.0' '1'"/> -->

    <node name="pathmanager" pkg="rosplane" type="rosplane_path_manager" output="screen">
      <remap from="state" to="truth"/>
      <param name="R_min" value="50.0"/>
      <param name="loiter_radius" value="75.0"/>
      <param name="groundD" value="0.0"/>
      <param name="home_north" value="-100.0"/>
      <param name="home_east" value="-100.0"/>
      <param name="loiter_down" value="-150.0"/>
    </node>

    <!-- <node name="pathplanner" pkg="rosplane" type="rosplane_path_planner" output="screen"/>  -->
    <!-- <node name="bomber" pkg="rosplane" type="bomb_dropper" output="screen">
      <param name="call_gpio" value="false"/>
    </node> -->

    <node name="dynamic_reconfigure_gui" pkg="rqt_reconfigure" type="rqt_reconfigure"/>
    <!-- <node name="position_plotter" pkg="rosplane" type="position_plotter.py" output="screen"> -->
    <!-- </node> -->

    <!-- <node name="groundstation" pkg="ros_groundstation" type="ros_groundstation"/> -->

  </group>

  <rosparam command="load" file="$(find ros_groundstation)/params/fixedwing_topics.yaml"/>
  <node name="ground_station" pkg="ros_groundstation" type="ros_groundstation" output="screen"/>

</launch>
